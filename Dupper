local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "a dusty trip | Dupper", HidePremium = false, SaveConfig = true, ConfigFolder = "adustydupper"})

local backpackPosition
local ChosenItem
local ItemList = {}
getgenv().dupper = false

for _, item in pairs(game.ReplicatedStorage.Items:GetChildren()) do
    table.insert(ItemList, item.Name)
end

local DupperTab = Window:MakeTab({
    Name = "Dupper",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

DupperTab:AddButton({
    Name = "Set Backpack Position",
    Callback = function()
        backpackPosition = tostring(game.Players.LocalPlayer.Character:FindFirstChild("Right Leg").CFrame)
    end    
})

DupperTab:AddButton({
    Name = "Close Backpack",
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CLOSE_INVENTORY"):FireServer()
    end    
})

DupperTab:AddButton({
    Name = "Open Backpack",
    Callback = function()
        local OpenBackpackArgs = {
            [1] = backpackPosition
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("OPEN_INVENTORY"):FireServer(unpack(OpenBackpackArgs))
    end    
})

DupperTab:AddButton({
    Name = "Empty Backpack (Backpack Must Be Open)",
    Callback = function()
        for _, item in pairs(game.Workspace:GetChildren()) do
            for _, itemName in pairs(ItemList) do
                if item.Name == itemName then
                    local BackpackRemoveArgs = {
                        [1] = item
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BACKPACK_REMOVE"):InvokeServer(unpack(BackpackRemoveArgs))
                end
            end
        end
    end    
})

DupperTab:AddToggle({
    Name = "Toggle Dupe",
    Default = false,
    Callback = function(Value)
        getgenv().dupper = Value
        while getgenv().dupper == true do
            local AddItemArgs = {
                [1] = 1,
                [2] = workspace:WaitForChild("Car Jack")
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BACKPACK_ADD"):InvokeServer(unpack(AddItemArgs))

            wait(0.7)

            local OpenBackpackArgs = {
                [1] = Position
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("OPEN_INVENTORY"):FireServer(unpack(OpenBackpackArgs))

            wait(0.7)

            for _, item in pairs(game.Workspace:GetChildren()) do
                for _, itemName in pairs(ItemList) do
                    if item.Name == itemName then
                        local BackpackRemoveArgs = {
                            [1] = item
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BACKPACK_REMOVE"):InvokeServer(unpack(BackpackRemoveArgs))
                    end
                end
            end

            wait(0.7)

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CLOSE_INVENTORY"):FireServer()
        end
    end    
})

OrionLib:Init()
